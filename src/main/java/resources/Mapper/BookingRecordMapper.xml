<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="filmsystem.Mapper.BookingRecordMapper">

    <resultMap id="recordList" type="filmsystem.Model.BookingRecord">
        <id property="id" column="id"/>
        <result property="userId" column="username"/>
        <result property="showId" column="password"/>
        <result property="createtime" column="createtime"/>
        <result property="paytime" column="paytime"/>
        <result property="collectstring" column="collectstring"/>
        <result property="status" column="status"/>
        <result property="row" column="row"/>
        <result property="col" column="col"/>
    </resultMap>

    <insert id="insertRecord" parameterType="filmsystem.Model.BookingRecord" useGeneratedKeys="true" keyProperty="id">
        insert into bookingrecord(userId, showId, createtime, paytime, collectstring, status, row, col)
        values(#{userId},#{showId},#{createtime},#{paytime},#{collectstring},#{status},#{row},#{col})
    </insert>

    <delete id="deleteRecord">
        delete from bookingrecord where id=#{id}
    </delete>

    <select id="selectRecordById" resultType="filmsystem.Model.BookingRecord">
        select * from bookingrecord where id=#{id}
    </select>

    <select id="selectRecordByUserId" resultMap="recordList">
        select * from bookingrecord where userId=#{userId}
        order by createtime desc
    </select>

    <select id="selectRecordByShowId" resultMap="recordList">
        select * from bookingrecord where showId=#{showId}
        order by createtime desc
    </select>

    <update id="updateRecord" parameterType="filmsystem.Model.BookingRecord">
        update bookingrecord set userId=#{userId},showId=#{showId},createtime=#{createtime},paytime=#{paytime},collectstring=#{collectstring},status=#{status},row=#{row},col=#{col} where id=#{id}
    </update>

    <select id="countTypeByUserId" resultType="java.util.HashMap">
        select type,count(*)as count1 from bookingrecord where userId=#{userId} group by type order by count1 desc
    </select>

</mapper>