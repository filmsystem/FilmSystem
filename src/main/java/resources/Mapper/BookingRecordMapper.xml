<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="filmsystem.Mapper.BookingRecordMapper">

    <resultMap id="recordList" type="filmsystem.Model.BookingRecord">
        <id property="id" column="id"/>
        <result property="userId" column="userId"/>
        <result property="showId" column="showId"/>
        <result property="createTime" column="createtime"/>
        <result property="payTime" column="paytime"/>
        <result property="collectingString" column="collectstring"/>
        <result property="status" column="status"/>
        <result property="rowNum" column="rowNum"/>
        <result property="col" column="col"/>
    </resultMap>

    <insert id="insertRecord" parameterType="filmsystem.Model.BookingRecord">
        insert into bookingrecord(id,userId, showId, createtime, paytime, collectstring, status, rowNum, col)
        values(#{id},#{userId},#{showId},#{createTime},#{payTime},#{collectingString},#{status},#{rowNum},#{col});
    </insert>

    <delete id="deleteRecord">
        delete from bookingrecord where id=#{id}
    </delete>

    <select id="selectRecordById" resultType="filmsystem.Model.BookingRecord">
        select * from bookingrecord where id=#{id}
    </select>

    <select id="selectRecordByUserId" resultMap="recordList">
        select * from bookingrecord where userId=#{userId}
        order by createtime desc
    </select>

    <select id="selectRecordByShowId" resultMap="recordList">
        select * from bookingrecord where showId=#{showId}
        order by createtime desc
    </select>

    <update id="updateRecord" parameterType="filmsystem.Model.BookingRecord">
        update bookingrecord set userId=#{userId},showId=#{showId},createtime=#{createTime},paytime=#{payTime},collectstring=#{collectingString},status=#{status},rowNum=#{rowNum},col=#{col} where id=#{id}
    </update>

    <select id="countTimesByFilm" resultType="java.util.HashMap">
        select name,count(film.name) as count1 from
            (select cinemaId,filmId from movie.bookingrecord,movie.filmshow
            where bookingrecord.showId=filmshow.id and filmshow.cinemaId=#{cinemaId} and bookingrecord.status=3)as tb1,film
        where tb1.filmId=film.id group by film.name order by count1 desc
    </select>

    <select id="countTimesByFilm2" resultType="java.util.HashMap">
        select name,count(film.name) as count1,star from
            (select cinemaId,filmId from movie.bookingrecord,movie.filmshow
            where bookingrecord.showId=filmshow.id and filmshow.cinemaId=#{cinemaId} and bookingrecord.status=3)as tb1,film
        where tb1.filmId=film.id group by film.name order by count1 desc
    </select>

    <select id="countTimesByMonth" resultType="java.util.HashMap">
        select date_format(createtime,'%Y-%m') as month1,count(*) as count1 from bookingrecord where userId=#{userId} group by month1 order by month1 asc
    </select>

    <select id="countTurnoverByDayInAWeek" resultType="java.util.HashMap">
        select date_format(createtime,'%m-%d') as day1,sum(price) as turnover from
            (select createtime,price from bookingrecord,filmshow
            where bookingrecord.showId=filmshow.id and filmshow.cinemaId=#{cinemaId} and bookingrecord.status=3)as tb1
        where DATE_SUB(CURRENT_TIMESTAMP,INTERVAL 7 DAY) <![CDATA[<=]]> createtime
        group by day1 order by day1 asc
    </select>

</mapper>